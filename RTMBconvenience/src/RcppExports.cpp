// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// pnorm5_ad
Rcpp::ComplexVector pnorm5_ad(Rcpp::ComplexVector x, Rcpp::ComplexVector mu, Rcpp::ComplexVector sigma, bool lower_tail, bool log_p);
RcppExport SEXP _RTMBconvenience_pnorm5_ad(SEXP xSEXP, SEXP muSEXP, SEXP sigmaSEXP, SEXP lower_tailSEXP, SEXP log_pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::ComplexVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< Rcpp::ComplexVector >::type mu(muSEXP);
    Rcpp::traits::input_parameter< Rcpp::ComplexVector >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< bool >::type lower_tail(lower_tailSEXP);
    Rcpp::traits::input_parameter< bool >::type log_p(log_pSEXP);
    rcpp_result_gen = Rcpp::wrap(pnorm5_ad(x, mu, sigma, lower_tail, log_p));
    return rcpp_result_gen;
END_RCPP
}
// log_ipnorm_ad
Rcpp::ComplexVector log_ipnorm_ad(Rcpp::ComplexVector x, Rcpp::ComplexVector y, Rcpp::ComplexVector mu, Rcpp::ComplexVector sigma);
RcppExport SEXP _RTMBconvenience_log_ipnorm_ad(SEXP xSEXP, SEXP ySEXP, SEXP muSEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::ComplexVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< Rcpp::ComplexVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< Rcpp::ComplexVector >::type mu(muSEXP);
    Rcpp::traits::input_parameter< Rcpp::ComplexVector >::type sigma(sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(log_ipnorm_ad(x, y, mu, sigma));
    return rcpp_result_gen;
END_RCPP
}
// pt_ad
Rcpp::ComplexVector pt_ad(Rcpp::ComplexVector x, Rcpp::ComplexVector df, bool lower_tail, bool log_p);
RcppExport SEXP _RTMBconvenience_pt_ad(SEXP xSEXP, SEXP dfSEXP, SEXP lower_tailSEXP, SEXP log_pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::ComplexVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< Rcpp::ComplexVector >::type df(dfSEXP);
    Rcpp::traits::input_parameter< bool >::type lower_tail(lower_tailSEXP);
    Rcpp::traits::input_parameter< bool >::type log_p(log_pSEXP);
    rcpp_result_gen = Rcpp::wrap(pt_ad(x, df, lower_tail, log_p));
    return rcpp_result_gen;
END_RCPP
}
// pde_scheme_ad
Rcpp::ComplexVector pde_scheme_ad(Rcpp::ComplexVector x);
RcppExport SEXP _RTMBconvenience_pde_scheme_ad(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::ComplexVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(pde_scheme_ad(x));
    return rcpp_result_gen;
END_RCPP
}
// logspace_add_ad
Rcpp::ComplexVector logspace_add_ad(Rcpp::ComplexVector x, Rcpp::ComplexVector y);
RcppExport SEXP _RTMBconvenience_logspace_add_ad(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::ComplexVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< Rcpp::ComplexVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(logspace_add_ad(x, y));
    return rcpp_result_gen;
END_RCPP
}
// logspace_sum_ad
Rcpp::ComplexVector logspace_sum_ad(Rcpp::ComplexVector x);
RcppExport SEXP _RTMBconvenience_logspace_sum_ad(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::ComplexVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(logspace_sum_ad(x));
    return rcpp_result_gen;
END_RCPP
}
// logspace_sub_ad
Rcpp::ComplexVector logspace_sub_ad(Rcpp::ComplexVector x, Rcpp::ComplexVector y);
RcppExport SEXP _RTMBconvenience_logspace_sub_ad(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::ComplexVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< Rcpp::ComplexVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(logspace_sub_ad(x, y));
    return rcpp_result_gen;
END_RCPP
}
// quantreg_ad
Rcpp::ComplexVector quantreg_ad(Rcpp::ComplexVector x, Rcpp::ComplexVector tau);
RcppExport SEXP _RTMBconvenience_quantreg_ad(SEXP xSEXP, SEXP tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::ComplexVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< Rcpp::ComplexVector >::type tau(tauSEXP);
    rcpp_result_gen = Rcpp::wrap(quantreg_ad(x, tau));
    return rcpp_result_gen;
END_RCPP
}
// login_log_besselI_ad
Rcpp::ComplexVector login_log_besselI_ad(Rcpp::ComplexVector logx, Rcpp::ComplexVector nu);
RcppExport SEXP _RTMBconvenience_login_log_besselI_ad(SEXP logxSEXP, SEXP nuSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::ComplexVector >::type logx(logxSEXP);
    Rcpp::traits::input_parameter< Rcpp::ComplexVector >::type nu(nuSEXP);
    rcpp_result_gen = Rcpp::wrap(login_log_besselI_ad(logx, nu));
    return rcpp_result_gen;
END_RCPP
}
// log_besselI_ad
Rcpp::ComplexVector log_besselI_ad(Rcpp::ComplexVector x, Rcpp::ComplexVector nu);
RcppExport SEXP _RTMBconvenience_log_besselI_ad(SEXP xSEXP, SEXP nuSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::ComplexVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< Rcpp::ComplexVector >::type nu(nuSEXP);
    rcpp_result_gen = Rcpp::wrap(log_besselI_ad(x, nu));
    return rcpp_result_gen;
END_RCPP
}
// log_MarcumQ_ad
Rcpp::ComplexVector log_MarcumQ_ad(Rcpp::ComplexVector a, Rcpp::ComplexVector b, Rcpp::ComplexVector nu);
RcppExport SEXP _RTMBconvenience_log_MarcumQ_ad(SEXP aSEXP, SEXP bSEXP, SEXP nuSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::ComplexVector >::type a(aSEXP);
    Rcpp::traits::input_parameter< Rcpp::ComplexVector >::type b(bSEXP);
    Rcpp::traits::input_parameter< Rcpp::ComplexVector >::type nu(nuSEXP);
    rcpp_result_gen = Rcpp::wrap(log_MarcumQ_ad(a, b, nu));
    return rcpp_result_gen;
END_RCPP
}
// login_log_MarcumQ_ad
Rcpp::ComplexVector login_log_MarcumQ_ad(Rcpp::ComplexVector loga, Rcpp::ComplexVector logb, Rcpp::ComplexVector nu);
RcppExport SEXP _RTMBconvenience_login_log_MarcumQ_ad(SEXP logaSEXP, SEXP logbSEXP, SEXP nuSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::ComplexVector >::type loga(logaSEXP);
    Rcpp::traits::input_parameter< Rcpp::ComplexVector >::type logb(logbSEXP);
    Rcpp::traits::input_parameter< Rcpp::ComplexVector >::type nu(nuSEXP);
    rcpp_result_gen = Rcpp::wrap(login_log_MarcumQ_ad(loga, logb, nu));
    return rcpp_result_gen;
END_RCPP
}
// log_Marcum1mQ_ad
Rcpp::ComplexVector log_Marcum1mQ_ad(Rcpp::ComplexVector a, Rcpp::ComplexVector b, Rcpp::ComplexVector nu);
RcppExport SEXP _RTMBconvenience_log_Marcum1mQ_ad(SEXP aSEXP, SEXP bSEXP, SEXP nuSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::ComplexVector >::type a(aSEXP);
    Rcpp::traits::input_parameter< Rcpp::ComplexVector >::type b(bSEXP);
    Rcpp::traits::input_parameter< Rcpp::ComplexVector >::type nu(nuSEXP);
    rcpp_result_gen = Rcpp::wrap(log_Marcum1mQ_ad(a, b, nu));
    return rcpp_result_gen;
END_RCPP
}
// login_log_Marcum1mQ_ad
Rcpp::ComplexVector login_log_Marcum1mQ_ad(Rcpp::ComplexVector loga, Rcpp::ComplexVector logb, Rcpp::ComplexVector nu);
RcppExport SEXP _RTMBconvenience_login_log_Marcum1mQ_ad(SEXP logaSEXP, SEXP logbSEXP, SEXP nuSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::ComplexVector >::type loga(logaSEXP);
    Rcpp::traits::input_parameter< Rcpp::ComplexVector >::type logb(logbSEXP);
    Rcpp::traits::input_parameter< Rcpp::ComplexVector >::type nu(nuSEXP);
    rcpp_result_gen = Rcpp::wrap(login_log_Marcum1mQ_ad(loga, logb, nu));
    return rcpp_result_gen;
END_RCPP
}
// logdrice_ad
Rcpp::ComplexVector logdrice_ad(Rcpp::ComplexVector logx, Rcpp::ComplexVector lognu, Rcpp::ComplexVector logsigma);
RcppExport SEXP _RTMBconvenience_logdrice_ad(SEXP logxSEXP, SEXP lognuSEXP, SEXP logsigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::ComplexVector >::type logx(logxSEXP);
    Rcpp::traits::input_parameter< Rcpp::ComplexVector >::type lognu(lognuSEXP);
    Rcpp::traits::input_parameter< Rcpp::ComplexVector >::type logsigma(logsigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(logdrice_ad(logx, lognu, logsigma));
    return rcpp_result_gen;
END_RCPP
}
// logprice_ad
Rcpp::ComplexVector logprice_ad(Rcpp::ComplexVector logx, Rcpp::ComplexVector lognu, Rcpp::ComplexVector logsigma, bool lower_tail);
RcppExport SEXP _RTMBconvenience_logprice_ad(SEXP logxSEXP, SEXP lognuSEXP, SEXP logsigmaSEXP, SEXP lower_tailSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::ComplexVector >::type logx(logxSEXP);
    Rcpp::traits::input_parameter< Rcpp::ComplexVector >::type lognu(lognuSEXP);
    Rcpp::traits::input_parameter< Rcpp::ComplexVector >::type logsigma(logsigmaSEXP);
    Rcpp::traits::input_parameter< bool >::type lower_tail(lower_tailSEXP);
    rcpp_result_gen = Rcpp::wrap(logprice_ad(logx, lognu, logsigma, lower_tail));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_RTMBconvenience_pnorm5_ad", (DL_FUNC) &_RTMBconvenience_pnorm5_ad, 5},
    {"_RTMBconvenience_log_ipnorm_ad", (DL_FUNC) &_RTMBconvenience_log_ipnorm_ad, 4},
    {"_RTMBconvenience_pt_ad", (DL_FUNC) &_RTMBconvenience_pt_ad, 4},
    {"_RTMBconvenience_pde_scheme_ad", (DL_FUNC) &_RTMBconvenience_pde_scheme_ad, 1},
    {"_RTMBconvenience_logspace_add_ad", (DL_FUNC) &_RTMBconvenience_logspace_add_ad, 2},
    {"_RTMBconvenience_logspace_sum_ad", (DL_FUNC) &_RTMBconvenience_logspace_sum_ad, 1},
    {"_RTMBconvenience_logspace_sub_ad", (DL_FUNC) &_RTMBconvenience_logspace_sub_ad, 2},
    {"_RTMBconvenience_quantreg_ad", (DL_FUNC) &_RTMBconvenience_quantreg_ad, 2},
    {"_RTMBconvenience_login_log_besselI_ad", (DL_FUNC) &_RTMBconvenience_login_log_besselI_ad, 2},
    {"_RTMBconvenience_log_besselI_ad", (DL_FUNC) &_RTMBconvenience_log_besselI_ad, 2},
    {"_RTMBconvenience_log_MarcumQ_ad", (DL_FUNC) &_RTMBconvenience_log_MarcumQ_ad, 3},
    {"_RTMBconvenience_login_log_MarcumQ_ad", (DL_FUNC) &_RTMBconvenience_login_log_MarcumQ_ad, 3},
    {"_RTMBconvenience_log_Marcum1mQ_ad", (DL_FUNC) &_RTMBconvenience_log_Marcum1mQ_ad, 3},
    {"_RTMBconvenience_login_log_Marcum1mQ_ad", (DL_FUNC) &_RTMBconvenience_login_log_Marcum1mQ_ad, 3},
    {"_RTMBconvenience_logdrice_ad", (DL_FUNC) &_RTMBconvenience_logdrice_ad, 3},
    {"_RTMBconvenience_logprice_ad", (DL_FUNC) &_RTMBconvenience_logprice_ad, 4},
    {NULL, NULL, 0}
};

void rtmb_set_shared_pointers();
void rtmb_set_shared_pointers();
RcppExport void R_init_RTMBconvenience(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
    rtmb_set_shared_pointers();
    rtmb_set_shared_pointers();
}
